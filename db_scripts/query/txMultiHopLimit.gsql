USE GRAPH AMLSim

CREATE QUERY txMultiHopLimit() FOR GRAPH AMLSim SYNTAX v2 { 

  /*
    This query grabs all of the features and returns it.
  */
  
  TYPEDEF TUPLE <BOOL tx_fraud, DOUBLE tx_amount, FLOAT s_pagerank, INT s_label, DOUBLE s_min_send_tx, DOUBLE s_min_receieve_tx, DOUBLE s_max_send_tx, DOUBLE s_max_recieve_tx, DOUBLE s_avg_send_tx, DOUBLE s_avg_recieve_tx, INT s_cnt_recieve_tx, INT s_cnt_send_tx, INT s_timestamp, FLOAT r_pagerank, INT r_label, DOUBLE r_min_send_tx, DOUBLE r_min_receieve_tx, DOUBLE r_max_send_tx, DOUBLE r_max_recieve_tx, DOUBLE r_avg_send_tx, DOUBLE r_avg_recieve_tx, INT r_cnt_recieve_tx, INT r_cnt_send_tx, INT r_timestamp> ORDER_TX;
  ListAccum<ORDER_TX> @@txRecords;
  
  Seed = {Transaction.*};
  
  acctSend = SELECT tgt FROM Seed:s -( (reverse_SEND_TRANSACTION> |  RECEIVE_TRANSACTION>):e)- Account:tgt
      ACCUM @@txRecords += ORDER_TX(s.is_fraud, s.amount, tgt.pagerank, tgt.label, tgt.min_send_tx, tgt.min_recieve_tx, tgt.max_send_tx, tgt.max_recieve_tx, tgt.avg_send_tx, tgt.avg_recieve_tx, tgt.cnt_recieve_tx, tgt.cnt_send_tx, e.ts, tgt.pagerank, tgt.label, tgt.min_send_tx, tgt.min_recieve_tx, tgt.max_send_tx, tgt.max_recieve_tx, tgt.avg_send_tx, tgt.avg_recieve_tx, tgt.cnt_recieve_tx, tgt.cnt_send_tx, e.ts);


  PRINT @@txRecords;
  
}

INSTALL QUERY txMultiHopLimit
