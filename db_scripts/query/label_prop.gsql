USE GRAPH AMLSim

CREATE QUERY label_prop (SET<STRING> v_type, SET<STRING> e_type, INT max_iter, INT output_limit, BOOL print_accum = TRUE, STRING file_path = "", STRING attr = "") FOR GRAPH AMLSim{
# Partition the vertices into communities, according to the Label Propagation method.
# Indicate community membership by assigning each vertex a community ID.

        OrAccum @@changed = true;
        MapAccum<INT, INT> @map;     # <communityId, numNeighbors>
        MapAccum<INT, INT> @@commSizes;   # <communityId, members>
        SumAccum<INT> @label, @num;  
        FILE f (file_path);
        Start = {v_type};

# Assign unique labels to each vertex
        Start = SELECT s FROM Start:s ACCUM s.@label = getvid(s);

# Propagate labels to neighbors until labels converge or the max iterations is reached
        WHILE @@changed == true LIMIT max_iter DO
                @@changed = false;
                Start = SELECT s 
                        FROM Start:s -(e_type:e)-> :t
                        ACCUM t.@map += (s.@label -> 1)  # count the occurrences of neighbor's labels
                        POST-ACCUM
                                INT maxV = 0,
                                INT label = 0,
                                # Iterate over the map to get the neighbor label that occurs most often
                                FOREACH (k,v) IN t.@map DO
                                        CASE WHEN v > maxV THEN
                                                maxV = v,
                                                label = k
                                        END
                                END,
                                # When the neighbor search finds a label AND it is a new label
                                # AND the label's count has increased, update the label.
                                CASE WHEN label != 0 AND t.@label != label AND maxV > t.@num THEN
                                        @@changed += true,
                                        t.@label = label,
                                        t.@num = maxV
                                END,
                                t.@map.clear();
        END;

        Start = {v_type};
        Start =  SELECT s FROM Start:s
                  POST-ACCUM 
                        IF attr != "" THEN s.setAttr(attr, s.@label) END,
                        IF file_path != "" THEN f.println(s, s.@label) END,
                        IF print_accum THEN @@commSizes += (s.@label -> 1) END
                  LIMIT output_limit;

        IF print_accum THEN 
           PRINT @@commSizes;
           PRINT Start[Start.@label];
        END;
}

INSTALL QUERY label_prop
